buildscript {
	dependencies {
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'com.google.cloud.tools.jib' version '3.1.4'
}

apply plugin: "com.ewerk.gradle.plugins.querydsl"

group = 'kr.hs.mirim'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	/* Database */
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'com.h2database:h2'

	/* 보안 */
	//implementation 'org.springframework.boot:spring-boot-starter-security'

	/* 검증 */
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.7'

	/* querydsl */
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'

	/* lombok */
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	/* chat GPT */
	implementation group: 'com.theokanning.openai-gpt3-java', name: 'service', version: '0.14.0'
	implementation group: 'io.github.flashvayne', name: 'chatgpt-spring-boot-starter', version: '1.0.4'
}

tasks.named('test') {
	useJUnitPlatform()
}
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}

jacoco {
	toolVersion = "0.8.7"
}
jacocoTestReport {
	reports {
		csv.enabled false
	}
	afterEvaluate {
		classDirectories.setFrom(
				files(classDirectories.files.collect {
					fileTree(dir: it,
							include: [
									'**/controller/**',
									'**/service/**'
							]
					)
				})
		)
	}
}